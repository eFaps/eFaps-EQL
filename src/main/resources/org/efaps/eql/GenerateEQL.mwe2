module org.efaps.GenerateEQL

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var projectName = "eFaps-EQL"
var grammarURI = "./src/main/resources/org/efaps/eql/EQL.xtext"
var fileExtensions = "eql"
var runtimeProject = ""
var encoding = "UTF-8"

Workflow {
    bean = StandaloneSetup {
        scanClassPath = true
        platformUri = "${outlet.src.test.dir}"

    }

    component = Generator {

        pathRtProject = runtimeProject
        projectNameRt = projectName
        encoding = encoding
        srcPath = "/src/main/java"
        srcGenPath = "/target/generated-sources/mwe2"
        mergeManifest = false
        language = auto-inject {
            uri = grammarURI
            // Java API to access grammar elements (required by several other fragments)
            fragment = grammarAccess.GrammarAccessFragment auto-inject {

            }

            // generates Java API for the generated EPackages
            fragment = ecore.EMFGeneratorFragment auto-inject {

                updateBuildProperties = false
                generateEditor = false
                generateEdit = false
            }

            // serializer 2.0
            fragment = serializer.SerializerFragment auto-inject {
                generateStub = false
            }

            // The antlr parser generator fragment.
            fragment = parser.antlr.XtextAntlrGeneratorFragment auto-inject {
            //  options = {
            //      backtrack = true
            //  }
            }

            // Xtend-based API for validation
            fragment = validation.JavaValidatorFragment auto-inject {
            //    composedCheck = "org.eclipse.xtext.validation.ImportUriValidator"
            //    composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
            }
        }
    }
}

