/*
 * generated by Xtext
 */
package org.efaps.eql.formatting2;

import com.google.inject.Inject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.efaps.eql.eQL.DeletePart;
import org.efaps.eql.eQL.ExecPart;
import org.efaps.eql.eQL.ExecSelect;
import org.efaps.eql.eQL.InsertPart;
import org.efaps.eql.eQL.NestedQueryPart;
import org.efaps.eql.eQL.ObjQueryPart;
import org.efaps.eql.eQL.OneOrder;
import org.efaps.eql.eQL.OneSelect;
import org.efaps.eql.eQL.OneUpdate;
import org.efaps.eql.eQL.OneWhere;
import org.efaps.eql.eQL.OrderPart;
import org.efaps.eql.eQL.PrintPart;
import org.efaps.eql.eQL.QueryPart;
import org.efaps.eql.eQL.SelectPart;
import org.efaps.eql.eQL.Statement;
import org.efaps.eql.eQL.UpdatePart;
import org.efaps.eql.eQL.WherePart;
import org.efaps.eql.services.EQLGrammarAccess;

class EQLFormatter extends AbstractFormatter2 {

    @Inject extension EQLGrammarAccess

    def dispatch void format(Statement statement, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        statement.append[newLine]
        format(statement.getExecPart(), document);
        format(statement.getPrintPart(), document);
        format(statement.getQueryPart(), document);
        format(statement.getUpdatePart(), document);
        format(statement.getDeletePart(), document);
        format(statement.getInsertPart(), document);
        format(statement.getCiPrintPart(), document);
    }

    def dispatch void format(DeletePart deletepart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(deletepart.getQueryPart(), document);
    }

    def dispatch void format(InsertPart insertpart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        for (OneUpdate updates : insertpart.getUpdates()) {
            format(updates, document);
        }
    }

    def dispatch void format(UpdatePart updatepart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(updatepart.getQueryPart(), document);
        for (OneUpdate updates : updatepart.getUpdates()) {
            format(updates, document);
        }
    }

    def dispatch void format(ObjQueryPart objquerypart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(objquerypart.getWherePart(), document);
        format(objquerypart.getLimitPart(), document);
    }

    def dispatch void format(ExecPart execpart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        for (ExecSelect execSelect : execpart.getExecSelect()) {
            format(execSelect, document);
        }
        format(execpart.getOrderPart(), document);
    }

    def dispatch void format(PrintPart printpart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(printpart.getSelectPart(), document);
        format(printpart.getOrderPart(), document);
    }

    def dispatch void format(QueryPart querypart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        querypart.append[newLine]
        format(querypart.getWherePart(), document);
        format(querypart.getLimitPart(), document);
        format(querypart.getSelectPart(), document);
        format(querypart.getOrderPart(), document);
    }

    def dispatch void format(WherePart wherepart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        for (OneWhere wheres : wherepart.getWheres()) {
            format(wheres, document);
        }
    }

    def dispatch void format(OneWhere onewhere, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(onewhere.getNestedQueryPart(), document);
    }

    def dispatch void format(NestedQueryPart nestedquerypart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(nestedquerypart.getWherePart(), document);
        format(nestedquerypart.getSelectPart(), document);
    }

    def dispatch void format(SelectPart selectpart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        for (OneSelect selects : selectpart.getSelects()) {
            format(selects, document);
        }
    }

    def dispatch void format(OneSelect oneselect, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        format(oneselect.getExecSelect(), document);
    }

    def dispatch void format(OrderPart orderpart, extension IFormattableDocument document) {
        // TODO: format HiddenRegions around keywords, attributes, cross references, etc.
        for (OneOrder oneOrder : orderpart.getOneOrder()) {
            format(oneOrder, document);
        }
    }
}
